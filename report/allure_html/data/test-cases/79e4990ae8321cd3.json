{
  "uid" : "79e4990ae8321cd3",
  "name" : "test_login01[tianmeng-123456]",
  "fullName" : "test_case.test_cases.TestCase#test_login01",
  "historyId" : "702359648250d6a978f2ea477aea838e",
  "time" : {
    "start" : 1596042885357,
    "stop" : 1596042895094,
    "duration" : 9737
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = <bound method Login.assert_txt of <page_object.login.Login object at 0x000001D000EB32C8>>()\n +    where <bound method Login.assert_txt of <page_object.login.Login object at 0x000001D000EB32C8>> = <page_object.login.Login object at 0x000001D000EB32C8>.assert_txt\n +      where <page_object.login.Login object at 0x000001D000EB32C8> = <test_case.test_cases.TestCase object at 0x000001D000EA0688>.lp",
  "statusTrace" : "self = <test_case.test_cases.TestCase object at 0x000001D000EA0688>\nusername = 'tianmeng', password = 123456\n\n    @pytest.mark.parametrize('username,password', data)\n    def test_login01(self,username,password):\n        self.lp.login(username, password)\n>       assert self.lp.assert_txt() == True\nE       assert False == True\nE        +  where False = <bound method Login.assert_txt of <page_object.login.Login object at 0x000001D000EB32C8>>()\nE        +    where <bound method Login.assert_txt of <page_object.login.Login object at 0x000001D000EB32C8>> = <page_object.login.Login object at 0x000001D000EB32C8>.assert_txt\nE        +      where <page_object.login.Login object at 0x000001D000EB32C8> = <test_case.test_cases.TestCase object at 0x000001D000EA0688>.lp\n\n..\\test_case\\test_cases.py:33: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = <bound method Login.assert_txt of <page_object.login.Login object at 0x000001D000EB32C8>>()\n +    where <bound method Login.assert_txt of <page_object.login.Login object at 0x000001D000EB32C8>> = <page_object.login.Login object at 0x000001D000EB32C8>.assert_txt\n +      where <page_object.login.Login object at 0x000001D000EB32C8> = <test_case.test_cases.TestCase object at 0x000001D000EA0688>.lp",
    "statusTrace" : "self = <test_case.test_cases.TestCase object at 0x000001D000EA0688>\nusername = 'tianmeng', password = 123456\n\n    @pytest.mark.parametrize('username,password', data)\n    def test_login01(self,username,password):\n        self.lp.login(username, password)\n>       assert self.lp.assert_txt() == True\nE       assert False == True\nE        +  where False = <bound method Login.assert_txt of <page_object.login.Login object at 0x000001D000EB32C8>>()\nE        +    where <bound method Login.assert_txt of <page_object.login.Login object at 0x000001D000EB32C8>> = <page_object.login.Login object at 0x000001D000EB32C8>.assert_txt\nE        +      where <page_object.login.Login object at 0x000001D000EB32C8> = <test_case.test_cases.TestCase object at 0x000001D000EA0688>.lp\n\n..\\test_case\\test_cases.py:33: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fa3a3c4e7e099fe4",
      "name" : "log",
      "source" : "fa3a3c4e7e099fe4.txt",
      "type" : "text/plain",
      "size" : 570
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_cases"
  }, {
    "name" : "subSuite",
    "value" : "TestCase"
  }, {
    "name" : "host",
    "value" : "LAPTOP-JHEF7VRV"
  }, {
    "name" : "thread",
    "value" : "14636-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_cases"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "password",
    "value" : "123456"
  }, {
    "name" : "username",
    "value" : "'tianmeng'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "79e4990ae8321cd3.json",
  "parameterValues" : [ "123456", "'tianmeng'" ]
}